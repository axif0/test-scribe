name: Check and Update Emoji Data

on:
  push:
    branches:
      - master

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          sudo apt-get install jq

      - name: Fetch language directories
        id: fetch-languages
        run: |
          # Fetch language directories from annotations
          LANG_LIST_FULL=$(curl -s https://api.github.com/repos/unicode-org/cldr-json/contents/cldr-json/cldr-annotations-full/annotations | jq -r '.[] | select(.type == "dir") | .name')
          
          # Fetch language directories from annotationsDerived
          LANG_LIST_DERIVED=$(curl -s https://api.github.com/repos/unicode-org/cldr-json/contents/cldr-json/cldr-annotations-derived-full/annotationsDerived | jq -r '.[] | select(.type == "dir") | .name')
          
          # Combine and remove duplicates
          LANG_LIST=$(echo -e "$LANG_LIST_FULL\n$LANG_LIST_DERIVED" | sort -u)
          
          echo "lang_list<<EOF" >> $GITHUB_ENV
          echo "$LANG_LIST" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Download and check emoji data
        id: check-updates
        run: |
          # Create directories if they don't exist
          mkdir -p src/scribe_data/unicode/cldr-annotations-derived-full
          mkdir -p src/scribe_data/unicode/cldr-annotations-full
          
          CHANGES_EXIST=false
          
          # Iterate over the language list
          echo "${{ env.lang_list }}" | while read -r lang; do
            # Download latest data for each language
            mkdir -p "src/scribe_data/unicode/cldr-annotations-derived-full/annotationsDerived/$lang"
            mkdir -p "src/scribe_data/unicode/cldr-annotations-full/annotations/$lang"
            
            curl -L "https://raw.githubusercontent.com/unicode-org/cldr-json/main/cldr-json/cldr-annotations-derived-full/annotationsDerived/$lang/annotations.json" -o "new_derived_$lang.json"
            curl -L "https://raw.githubusercontent.com/unicode-org/cldr-json/main/cldr-json/cldr-annotations-full/annotations/$lang/annotations.json" -o "new_full_$lang.json"
            
            # Check derived annotations
            if [ -f "src/scribe_data/unicode/cldr-annotations-derived-full/annotationsDerived/$lang/annotations.json" ]; then
              if ! cmp -s "new_derived_$lang.json" "src/scribe_data/unicode/cldr-annotations-derived-full/annotationsDerived/$lang/annotations.json"; then
                CHANGES_EXIST=true
              fi
            else
              CHANGES_EXIST=true
            fi
            
            # Check full annotations
            if [ -f "src/scribe_data/unicode/cldr-annotations-full/annotations/$lang/annotations.json" ]; then
              if ! cmp -s "new_full_$lang.json" "src/scribe_data/unicode/cldr-annotations-full/annotations/$lang/annotations.json"; then
                CHANGES_EXIST=true
              fi
            else
              CHANGES_EXIST=true
            fi
          done
          
          echo "changes_exist=${CHANGES_EXIST}" >> $GITHUB_OUTPUT

      - name: Update files if changed
        if: steps.check-updates.outputs.changes_exist == 'true'
        run: |
          # Iterate over the language list
          echo "${{ env.lang_list }}" | while read -r lang; do
            mkdir -p "src/scribe_data/unicode/cldr-annotations-derived-full/annotationsDerived/$lang"
            mkdir -p "src/scribe_data/unicode/cldr-annotations-full/annotations/$lang"
            
            mv "new_derived_$lang.json" "src/scribe_data/unicode/cldr-annotations-derived-full/annotationsDerived/$lang/annotations.json"
            mv "new_full_$lang.json" "src/scribe_data/unicode/cldr-annotations-full/annotations/$lang/annotations.json"
          done
          
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Create Pull Request
        if: steps.check-updates.outputs.changes_exist == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'chore: Update emoji annotations data'
          body: |
            This PR updates the emoji annotations data from CLDR:
            - Updated cldr-annotations-derived-full data
            - Updated cldr-annotations-full data
            
            This is an automated PR created by the emoji data update workflow.
          branch: update-emoji-data
          delete-branch: true
          commit-message: 'chore: Update emoji annotations data'
          labels: |
            automated pr
            emoji-data
