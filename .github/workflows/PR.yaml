name: Create Automated PR
on:
  push:
    branches:
      - master

jobs:
  check-repository:
    runs-on: ubuntu-latest
    outputs:
      is_correct_repo: ${{ steps.check.outputs.is_correct_repo }}
    steps:
      - name: Check repository
        id: check
        run: |
          if [ "$GITHUB_REPOSITORY" = "axif0/test-scribe" ]; then
            echo "is_correct_repo=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_correct_repo=false" >> "$GITHUB_OUTPUT"
            echo "::warning::This workflow should only run in scribe-org/Scribe-Data repository."
          fi

  setup:
    needs: check-repository
    if: needs.check-repository.outputs.is_correct_repo == 'true'
    runs-on: ubuntu-latest
    outputs:
      dump_path: ${{ steps.download.outputs.dump_path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install requests
          pip install -e .

      - name: Download Wikidata dump
        id: download
        run: |
          # Capture the last line only which should be the path
          DUMP_PATH=$(PYTHONPATH=$PYTHONPATH:$(pwd)/src python src/scribe_data/check/check_missing_forms/download_wd.py | tail -n1)
          echo "dump_path=${DUMP_PATH}" >> "$GITHUB_OUTPUT"
          
          # Debug output
          echo "Captured dump path: ${DUMP_PATH}"
          if [ -f "${DUMP_PATH}" ]; then
            echo "File exists at the path"
            ls -l "${DUMP_PATH}"
          else
            echo "File does not exist at the path"
          fi

  process-data:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Run check_missing_forms.py
        run: |
          QUERY_DIR="$(pwd)/src/scribe_data/wikidata/language_data_extraction"
          
          if [ -d "${QUERY_DIR}" ]; then
            echo "Running check_missing_forms.py..."
            PYTHONPATH=$PYTHONPATH:$(pwd)/src python src/scribe_data/check/check_missing_forms/check_missing_forms.py "${{ needs.setup.outputs.dump_path }}" "${QUERY_DIR}"
          else
            echo "Query directory not found"
            exit 1
          fi

  create-pr:
    needs: process-data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.email "muhamadasif570@gmail.com"
          git config --global user.name "axif0"

      - name: Stage and check changes
        id: check-changes
        run: |
          # Add all potential new files
          git add -A src/scribe_data/wikidata/language_data_extraction/

          # Check if there are any changes
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate PR Body
        if: steps.check-changes.outputs.has_changes == 'true'
        id: pr-body
        run: |
          # Get list of changed/added files
          CHANGED_FILES=$(git diff --cached --name-only)
          
          {
            echo "body<<EOF"
            echo "This PR was automatically created by a GitHub Action."
            echo ""
            echo "### Changed Files Summary"
            echo "| Language | Category | File |"
            echo "|----------|-----------|------|"
            
            while IFS= read -r file; do
              if [[ $file == src/scribe_data/wikidata/language_data_extraction/* ]]; then
                lang=$(echo "$file" | cut -d'/' -f6)
                category=$(echo "$file" | cut -d'/' -f7)
                filename=$(echo "$file" | cut -d'/' -f8)
                echo "| $lang | $category | $filename |"
              fi
            done <<< "$CHANGED_FILES"
            
            echo ""
            echo "Total files changed: $(echo "$CHANGED_FILES" | wc -l)"
            echo ""
            echo "Please review the changes and provide feedback."
            echo "EOF"
          } >> $GITHUB_OUTPUT

          # Debug output
          echo "Changes detected:"
          git diff --cached --name-status

      - name: Create Pull Request
        if: steps.check-changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Automated PR: Updated Language Data Files'
          body: ${{ steps.pr-body.outputs.body }}
          base: master
          branch: automated-missing-forms
          delete-branch: true
          commit-message: '[create-pull-request] automated change'
          committer: GitHub <noreply@github.com>
          author: axif0 <axif0@users.noreply.github.com>

      - name: Check PR Creation Result
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          echo "Changes were detected and PR creation was attempted"
          echo "Current branch: $(git branch --show-current)"
          echo "Git status:"
          git status
